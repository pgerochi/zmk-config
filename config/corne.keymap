/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    layers {
        BASE = <0>;
        LOWER = <1>;
        RAISE = <2>;
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E             &kp R      &kp T    &kp Y  &kp U      &kp I      &kp O    &kp P      &kp BSPC
&kp TAB     &kp A  &kp S  &kp D             &kp F      &kp G    &kp H  &kp J      &kp K      &kp L    &kp SEMI   &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C             &kp V      &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp SLASH  &mo 1
                          &kp LEFT_COMMAND  &kp SPACE  &mo 1    &mo 2  &kp ENTER  &kp RALT
            >;
        };

        LOWER {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE     &kp N1     &kp N2     &kp N3            &kp N4     &kp N5    &kp N6     &kp N7  &kp N8             &kp N9            &kp N0             &kp MINUS
&kt CAPSLOCK  &kp LG(A)  &kp LG(S)  &trans            &kp LG(F)  &trans    &trans     &trans  &trans             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LSHFT     &kp LG(Z)  &kp LG(X)  &kp LG(C)         &kp LG(V)  &trans    &kp LG(N)  &trans  &trans             &trans            &kp SLASH          &trans
                                    &kp LEFT_CONTROL  &trans     &trans    &trans     &trans  &kp RIGHT_CONTROL
            >;
        };

        RAISE {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE       &kp EXCL           &kp AT           &kp HASH      &kp DLLR       &kp PRCNT        &kp CARET  &kp AMPS      &kp ASTRK  &kp LPAR  &kp RPAR       &kp EQUAL
&bt BT_CLR_ALL  &bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_DISC 0  &bt BT_DISC 1    &trans     &kp UP_ARROW  &trans     &trans    &kp SEMICOLON  &kp SQT
&kp LSHFT       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_SLEEP   &trans         &trans           &kp LEFT   &kp DOWN      &kp RIGHT  &trans    &trans         &trans
                                                    &trans        &trans         &trans           &trans     &trans        &trans
            >;
        };
    };
};
